/**
 *
 *
  _____                      _              _ _ _     _   _     _        __ _ _
 |  __ \                    | |            | (_) |   | | | |   (_)      / _(_) |
 | |  | | ___    _ __   ___ | |_    ___  __| |_| |_  | |_| |__  _ ___  | |_ _| | ___
 | |  | |/ _ \  | '_ \ / _ \| __|  / _ \/ _` | | __| | __| '_ \| / __| |  _| | |/ _ \
 | |__| | (_) | | | | | (_) | |_  |  __/ (_| | | |_  | |_| | | | \__ \ | | | | |  __/
 |_____/ \___/  |_| |_|\___/ \__|  \___|\__,_|_|\__|  \__|_| |_|_|___/ |_| |_|_|\___|

 * DO NOT EDIT THIS FILE!!
 *
 *  TO CUSTOMIZE FUNCTIONS IN ReportActionsGenerated.js PLEASE EDIT ../ReportActions.js
 *
 *  -- THIS FILE WILL BE OVERWRITTEN ON THE NEXT SKAFFOLDER'S CODE GENERATION --
 *
 */

import * as types from "../../actionTypes";
import ReportApi from "../../../api/ReportApi";

let actionsFunction = {

  //CRUD METHODS

  // Create report
  createReport: function(report) {
    return function(dispatch) {
      return ReportApi
        .createReport(report)
        .then(report => {
          dispatch(actionsFunction.createReportSuccess(report));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  createReportSuccess: function(report) {
    return { type: types.CREATE_REPORT_SUCCESS, payload: report };
  },


  // Delete report
  deleteReport: function(id) {
    return function(dispatch) {
      return ReportApi
        .deleteReport(id)
        .then(report => {
          dispatch(actionsFunction.deleteReportSuccess(report));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  deleteReportSuccess: function(report) {
    return { type: types.DELETE_REPORT_SUCCESS, payload: report };
  },


  // Find by doctor
  findBydoctor: function(key) {
    return function(dispatch) {
      return ReportApi
        .findBydoctor(key)
        .then(item => {
          dispatch(actionsFunction.findBydoctorSuccess(item));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  findBydoctorSuccess: function(item) {
    return { type: types.FINDBYDOCTOR_REPORT_SUCCESS, payload: item };
  },


  // Get report
  loadReport: function(id) {
    return function(dispatch) {
      return ReportApi
        .getOneReport(id)
        .then(report => {
          dispatch(actionsFunction.loadReportSuccess(report));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  loadReportSuccess: function(report) {
    return { type: types.GET_REPORT_SUCCESS, payload: report };
  },

  // Load  list
  loadReportList: function() {
    return function(dispatch) {
      return ReportApi
        .getReportList()
        .then(list => {
          dispatch(actionsFunction.loadReportListSuccess(list));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  loadReportListSuccess: function(list) {
    return { type: types.LIST_REPORT_SUCCESS, payload: list };
  },

	
  // Save report
  saveReport: function(report) {
    return function(dispatch) {
      return ReportApi
        .saveReport(report)
        .then(report => {
          dispatch(actionsFunction.saveReportSuccess(report));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  saveReportSuccess: function(report) {
    return { type: types.UPDATE_REPORT_SUCCESS, payload: report };
  },


};

export default actionsFunction;
