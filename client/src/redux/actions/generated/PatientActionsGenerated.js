/**
 *
 *
  _____                      _              _ _ _     _   _     _        __ _ _
 |  __ \                    | |            | (_) |   | | | |   (_)      / _(_) |
 | |  | | ___    _ __   ___ | |_    ___  __| |_| |_  | |_| |__  _ ___  | |_ _| | ___
 | |  | |/ _ \  | '_ \ / _ \| __|  / _ \/ _` | | __| | __| '_ \| / __| |  _| | |/ _ \
 | |__| | (_) | | | | | (_) | |_  |  __/ (_| | | |_  | |_| | | | \__ \ | | | | |  __/
 |_____/ \___/  |_| |_|\___/ \__|  \___|\__,_|_|\__|  \__|_| |_|_|___/ |_| |_|_|\___|

 * DO NOT EDIT THIS FILE!!
 *
 *  TO CUSTOMIZE FUNCTIONS IN PatientActionsGenerated.js PLEASE EDIT ../PatientActions.js
 *
 *  -- THIS FILE WILL BE OVERWRITTEN ON THE NEXT SKAFFOLDER'S CODE GENERATION --
 *
 */

import * as types from "../../actionTypes";
import PatientApi from "../../../api/PatientApi";

let actionsFunction = {

  //CRUD METHODS

  // Create patient
  createPatient: function(patient) {
    return function(dispatch) {
      return PatientApi
        .createPatient(patient)
        .then(patient => {
          dispatch(actionsFunction.createPatientSuccess(patient));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  createPatientSuccess: function(patient) {
    return { type: types.CREATE_PATIENT_SUCCESS, payload: patient };
  },


  // Delete patient
  deletePatient: function(id) {
    return function(dispatch) {
      return PatientApi
        .deletePatient(id)
        .then(patient => {
          dispatch(actionsFunction.deletePatientSuccess(patient));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  deletePatientSuccess: function(patient) {
    return { type: types.DELETE_PATIENT_SUCCESS, payload: patient };
  },


  // Get patient
  loadPatient: function(id) {
    return function(dispatch) {
      return PatientApi
        .getOnePatient(id)
        .then(patient => {
          dispatch(actionsFunction.loadPatientSuccess(patient));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  loadPatientSuccess: function(patient) {
    return { type: types.GET_PATIENT_SUCCESS, payload: patient };
  },

  // Load  list
  loadPatientList: function() {
    return function(dispatch) {
      return PatientApi
        .getPatientList()
        .then(list => {
          dispatch(actionsFunction.loadPatientListSuccess(list));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  loadPatientListSuccess: function(list) {
    return { type: types.LIST_PATIENT_SUCCESS, payload: list };
  },

	
  // Save patient
  savePatient: function(patient) {
    return function(dispatch) {
      return PatientApi
        .savePatient(patient)
        .then(patient => {
          dispatch(actionsFunction.savePatientSuccess(patient));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  savePatientSuccess: function(patient) {
    return { type: types.UPDATE_PATIENT_SUCCESS, payload: patient };
  },


};

export default actionsFunction;
