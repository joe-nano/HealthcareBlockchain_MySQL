/**
 *
 *
  _____                      _              _ _ _     _   _     _        __ _ _
 |  __ \                    | |            | (_) |   | | | |   (_)      / _(_) |
 | |  | | ___    _ __   ___ | |_    ___  __| |_| |_  | |_| |__  _ ___  | |_ _| | ___
 | |  | |/ _ \  | '_ \ / _ \| __|  / _ \/ _` | | __| | __| '_ \| / __| |  _| | |/ _ \
 | |__| | (_) | | | | | (_) | |_  |  __/ (_| | | |_  | |_| | | | \__ \ | | | | |  __/
 |_____/ \___/  |_| |_|\___/ \__|  \___|\__,_|_|\__|  \__|_| |_|_|___/ |_| |_|_|\___|

 * DO NOT EDIT THIS FILE!!
 *
 *  TO CUSTOMIZE FUNCTIONS IN DoctorActionsGenerated.js PLEASE EDIT ../DoctorActions.js
 *
 *  -- THIS FILE WILL BE OVERWRITTEN ON THE NEXT SKAFFOLDER'S CODE GENERATION --
 *
 */

import * as types from "../../actionTypes";
import DoctorApi from "../../../api/DoctorApi";

let actionsFunction = {

  //CRUD METHODS

  // Create doctor
  createDoctor: function(doctor) {
    return function(dispatch) {
      return DoctorApi
        .createDoctor(doctor)
        .then(doctor => {
          dispatch(actionsFunction.createDoctorSuccess(doctor));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  createDoctorSuccess: function(doctor) {
    return { type: types.CREATE_DOCTOR_SUCCESS, payload: doctor };
  },


  // Delete doctor
  deleteDoctor: function(id) {
    return function(dispatch) {
      return DoctorApi
        .deleteDoctor(id)
        .then(doctor => {
          dispatch(actionsFunction.deleteDoctorSuccess(doctor));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  deleteDoctorSuccess: function(doctor) {
    return { type: types.DELETE_DOCTOR_SUCCESS, payload: doctor };
  },


  // Find by patients
  findBypatients: function(key) {
    return function(dispatch) {
      return DoctorApi
        .findBypatients(key)
        .then(item => {
          dispatch(actionsFunction.findBypatientsSuccess(item));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  findBypatientsSuccess: function(item) {
    return { type: types.FINDBYPATIENTS_DOCTOR_SUCCESS, payload: item };
  },


  // Get doctor
  loadDoctor: function(id) {
    return function(dispatch) {
      return DoctorApi
        .getOneDoctor(id)
        .then(doctor => {
          dispatch(actionsFunction.loadDoctorSuccess(doctor));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  loadDoctorSuccess: function(doctor) {
    return { type: types.GET_DOCTOR_SUCCESS, payload: doctor };
  },

  // Load  list
  loadDoctorList: function() {
    return function(dispatch) {
      return DoctorApi
        .getDoctorList()
        .then(list => {
          dispatch(actionsFunction.loadDoctorListSuccess(list));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  loadDoctorListSuccess: function(list) {
    return { type: types.LIST_DOCTOR_SUCCESS, payload: list };
  },

	
  // Save doctor
  saveDoctor: function(doctor) {
    return function(dispatch) {
      return DoctorApi
        .saveDoctor(doctor)
        .then(doctor => {
          dispatch(actionsFunction.saveDoctorSuccess(doctor));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  saveDoctorSuccess: function(doctor) {
    return { type: types.UPDATE_DOCTOR_SUCCESS, payload: doctor };
  },


};

export default actionsFunction;
